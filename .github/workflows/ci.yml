name: YeneFresh CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # Fast domain tests (2 seconds!)
  test-domain:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Run domain layer tests (fast, no mocks!)
        run: flutter test test/domain/ --reporter=expanded
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: domain-test-results
          path: test-results.json

  # Static analysis
  analyze:
    runs-on: ubuntu-latest
    needs: test-domain
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
      
      - run: flutter pub get
      - run: flutter analyze --fatal-warnings --fatal-infos
  
  # Build web (dev)
  build-web-dev:
    runs-on: ubuntu-latest
    needs: [test-domain, analyze]
    if: github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
      
      - run: flutter pub get
      - run: flutter build web --release --dart-define-from-file=.env.json
      
      - name: Upload web build
        uses: actions/upload-artifact@v3
        with:
          name: web-dev-build
          path: build/web/
  
  # Build web (prod)
  build-web-prod:
    runs-on: ubuntu-latest
    needs: [test-domain, analyze]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
      
      - run: flutter pub get
      - run: flutter build web --release --dart-define-from-file=.env.json
      
      - name: Deploy to hosting (placeholder)
        run: echo "Deploy to Firebase Hosting / Netlify / Vercel"
      
      - name: Upload web build
        uses: actions/upload-artifact@v3
        with:
          name: web-prod-build
          path: build/web/
  
  # Build Android APK
  build-android:
    runs-on: ubuntu-latest
    needs: [test-domain, analyze]
    strategy:
      matrix:
        flavor: [dev, stage, prod]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
      
      - run: flutter pub get
      
      - name: Build APK (${{ matrix.flavor }})
        run: flutter build apk --release
      
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: android-${{ matrix.flavor }}-apk
          path: build/app/outputs/flutter-apk/*.apk

  # Performance check
  performance:
    runs-on: ubuntu-latest
    needs: build-web-dev
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v3
        with:
          name: web-dev-build
          path: build/web/
      
      - name: Run Lighthouse CI
        run: echo "Lighthouse audit placeholder - target >90 score"
